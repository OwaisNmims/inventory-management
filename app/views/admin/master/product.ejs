<%- include ('../partials/head') %>

<!--  BEGIN NAVBAR  -->
<%- include ('../partials/header') %>
<!--  END NAVBAR  -->

<!--  BEGIN MAIN CONTAINER  -->
<div class="main-container" id="container">
  <div class="overlay"></div>
  <div class="search-overlay"></div>

  <!--  BEGIN SIDEBAR  -->
  <%- include ('../partials/sidebar') %>
  <!--  END SIDEBAR  -->

  <!--  BEGIN CONTENT AREA  -->
  <div id="content" class="main-content">
    <div class="layout-px-spacing">
      <div class="middle-content container-xxl p-0">
        <!--  BEGIN BREADCRUMBS  -->
        <div class="secondary-nav">
          <div class="breadcrumbs-container" data-page-heading="Analytics">
            <header class="header navbar navbar-expand-sm">
              <a href="javascript:void(0);" class="btn-toggle sidebarCollapse" data-placement="bottom">
                <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-menu">
                  <line x1="3" y1="12" x2="21" y2="12"></line>
                  <line x1="3" y1="6" x2="21" y2="6"></line>
                  <line x1="3" y1="18" x2="21" y2="18"></line>
                </svg>
              </a>
              <div class="d-flex breadcrumb-content">
                <div class="page-header">
                  <div class="page-title"></div>

                  <nav class="breadcrumb-style-one" aria-label="breadcrumb">
                    <ol class="breadcrumb">
                      <li class="breadcrumb-item active">
                        <a href="./masters">Master</a>
                      </li>
                      <li class="breadcrumb-item active" aria-current="page">
                        Product
                      </li>
                    </ol>
                  </nav>
                </div>
              </div>
            </header>
          </div>
        </div>
        <!--  END BREADCRUMBS  -->

        <div class="main-content">
          <div class="table-template">
            <div class="table-header">
              <div class="table-title">
                <h3>Product</h3>
              </div>
              <div class="table-actions">
                <button style="background: none; border: none" class="create-product-modal">
                  <i class="fa-regular fa-square-plus"></i>
                </button>
              </div>
            </div>

            <div class="table-content">
              <div class="table-filter-container"></div>
              <div class="table-content">
                <div class="table-responsive">
                  <table class="table table-bordered" id="table-content">
                    <thead>
                      <tr>
                        <th scope="col">Sr No.</th>
                        <th scope="col">Product Name</th>
                        <th scope="col">Product Code</th>
                        <th scope="col">Category</th>
                        <th scope="col">Price</th>
                        <th scope="col">Unit</th>
                        <th class="text-center" scope="col">Actions</th>
                      </tr>
                    </thead>
                    <tbody>
                      <% let i=1; for(let data of products) { %>

                      <tr data-id="<%= data.id %>">
                        <td>
                          <%= i %>
                        </td>

                        <td class="product-name">
                          <%= data.name %>
                        </td>
                        <td class="product-code">
                          <%= data.product_code %>
                        </td>
                        <td class="product-category">
                          <%= data.category || '-' %>
                        </td>
                        <td class="product-price">
                          <%= data.price || '-' %>
                        </td>
                        <td class="product-unit">
                          <%= data.unit || '-' %>
                        </td>
                        <td class="text-center">
                          <div class="action-btns">
                            <a href="javascript:void(0);" class="action-btn btn-edit bs-tooltip me-2" data-id="<%= data.id %>" data-toggle="tooltip" data-placement="top" title="Edit">
                              <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-edit-2">
                                <path d="M17 3a2.828 2.828 0 1 1 4 4L7.5 20.5 2 22l1.5-5.5L17 3z"></path>
                              </svg>
                            </a>
                            <a href="javascript:void(0);" class="action-btn btn-delete bs-tooltip" data-id="<%= data.id %>" data-toggle="tooltip" data-placement="top" title="Delete">
                              <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-trash-2">
                                <polyline points="3 6 5 6 21 6"></polyline>
                                <path d="M19 6v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6m3 0V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v2">
                                </path>
                                <line x1="10" y1="11" x2="10" y2="17"></line>
                                <line x1="14" y1="11" x2="14" y2="17"></line>
                              </svg>
                            </a>
                          </div>
                        </td>
                      </tr>

                      <% i++ %>
                      <% } %>

                    </tbody>
                  </table>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
  <!--  END CONTENT AREA  -->
</div>
<!-- END MAIN CONTAINER -->

<!--ADD Modal -->
<div class="modal fade" id="add-product-modal" tabindex="-1" data-bs-backdrop="static" data-bs-keyboard="false" aria-labelledby="add-product-modal" aria-hidden="true">
  <div class="modal-dialog modal-xl" role="document">
    <div class="modal-content modal-inputform">
      <div class="modal-header modal-inputform-header">
        <h5 class="modal-title text-dark" id="">ADD PRODUCT</h5>
        <button type="button" class="btn fs-4 text-dark" data-bs-dismiss="modal" aria-label="Close">
          <i class="fas fa-times"></i>
        </button>
      </div>
      <div class="modal-body">
        <div class="row info-container">
          <div class="col-md-4 select-fields">
            <div class="mb-3">
              <label class="form-label" for="add-product-name">Product Name</label>
              <input type="text" class="form-control" id="add-product-name" />
            </div>
            <div class="mb-3">
              <label class="form-label" for="add-product-code">Product Code</label>
              <input type="text" class="form-control" id="add-product-code" />
            </div>
            <div class="mb-3">
              <label class="form-label" for="add-product-category">Category</label>
              <input type="text" class="form-control" id="add-product-category" />
            </div>
            <div class="mb-3">
              <label class="form-label" for="add-product-price">Price</label>
              <input type="number" step="0.01" class="form-control" id="add-product-price" />
            </div>
            <div class="mb-3">
              <label class="form-label" for="add-product-unit">Unit</label>
              <input type="text" class="form-control" id="add-product-unit" placeholder="e.g., pieces, kg, liter" />
            </div>
            <div class="mb-3">
              <label class="form-label" for="add-product-description">Description</label>
              <textarea class="form-control" id="add-product-description" rows="2"></textarea>
            </div>
            <div class="mb-3">
              <label class="form-label" for="add-product-specifications">Specifications</label>
              <textarea class="form-control" id="add-product-specifications" rows="2"></textarea>
            </div>

            <div class="mb-3 d-grid gap-2">
              <button class="btn text-light add-product btn-info">ADD</button>
            </div>
          </div>
          <div class="col-md-8 selected-fields">
            <div class="table-responsive">
              <table class="table table-bordered" id="add-more-product-table">
                <thead>
                  <th>Sr No.</th>
                  <th>Product Name</th>
                  <th>Product Code</th>
                  <th>Category</th>
                  <th>Price</th>
                  <th>Unit</th>
                  <th>Action</th>
                </thead>
                <tbody></tbody>
              </table>
            </div>
          </div>
        </div>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn create-product btn-primary">
          CREATE
        </button>
      </div>
    </div>
  </div>
</div>

<!-- Edit modal -->
<div class="modal fade" id="edit-product-modal" tabindex="-1" data-bs-backdrop="static" data-bs-keyboard="false" aria-labelledby="edit-product-modal" aria-hidden="true">
  <div class="modal-dialog modal-lg" role="document">
    <div class="modal-content modal-inputform">
      <div class="modal-header modal-inputform-header">
        <h5 class="modal-title text-dark" id="">EDIT PRODUCT</h5>
        <button type="button" class="btn fs-4 text-dark" data-bs-dismiss="modal" aria-label="Close">
          <i class="fas fa-times"></i>
        </button>
      </div>
      <div class="modal-body">
        <div class="row select-fields">
          <div class="col-md-6">
            <div class="mb-3">
              <label class="form-label" for="edit-product-name">Product Name</label>
              <input type="text" class="form-control" id="edit-product-name" />
            </div>
            <div class="mb-3">
              <label class="form-label" for="edit-product-code">Product Code</label>
              <input type="text" class="form-control" id="edit-product-code" />
            </div>
            <div class="mb-3">
              <label class="form-label" for="edit-product-category">Category</label>
              <input type="text" class="form-control" id="edit-product-category" />
            </div>
            <div class="mb-3">
              <label class="form-label" for="edit-product-description">Description</label>
              <textarea class="form-control" id="edit-product-description" rows="2"></textarea>
            </div>
          </div>
          <div class="col-md-6">
            <div class="mb-3">
              <label class="form-label" for="edit-product-price">Price</label>
              <input type="number" step="0.01" class="form-control" id="edit-product-price" />
            </div>
            <div class="mb-3">
              <label class="form-label" for="edit-product-unit">Unit</label>
              <input type="text" class="form-control" id="edit-product-unit" />
            </div>
            <div class="mb-3">
              <label class="form-label" for="edit-product-specifications">Specifications</label>
              <textarea class="form-control" id="edit-product-specifications" rows="2"></textarea>
            </div>
          </div>
        </div>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn save-product btn-primary">SAVE</button>
      </div>
    </div>
  </div>
</div>

<%- include ('../partials/footer') %>

<!-- CUSTOM JS SCRIPT -->
<script>
  $(document).ready(function() {
    $(".create-product-modal").on("click", function() {
      $("#add-product-modal").modal("show");
    });

    function serializeTable(tableId) {
      let i = 1;
      $(`#${tableId} tbody tr`).each((index, element) => {
        $(element).find("td:eq(0)").text(i);
        i++;
      });
    }

    $(document).on("click", ".add-product", function() {
      let productName = $("#add-product-name").val().trim();
      let productCode = $("#add-product-code").val().trim().toUpperCase();
      let category = $("#add-product-category").val().trim();
      let price = $("#add-product-price").val();
      let unit = $("#add-product-unit").val().trim();
      let description = $("#add-product-description").val().trim();
      let specifications = $("#add-product-specifications").val().trim();
      
      let duplicate = false;
      if ($(document).find(".add-product-row").length > 0) {
        $(document).find(".add-product-row").each((index, element) => {
          if ($(element).find('.product-name').text() == productName || $(element).find('.product-code').text() == productCode) {
            createAlert({
              title: 'ERROR',
              msg: 'You cannot add duplicate Product Name/Code',
              type: 'negative'
            })
            duplicate = true;
          }
        });
      }
      if (duplicate) {
        return;
      }

      if (!productName || !productCode) {
        createAlert({
          title: 'ERROR',
          msg: 'Product Name and Code are required',
          type: 'negative'
        });
        return;
      }

      let count = $("#add-more-product-table tbody tr").length == undefined ? 0 : $("#add-more-product-table tbody tr").length;
      let tableRow = `<tr class="add-product-row">
            <td>${++count}</td>
            <td class="product-name">${productName}</td>
            <td class="product-code">${productCode}</td>
            <td class="product-category">${category || '-'}</td>
            <td class="product-price">${price || '-'}</td>
            <td class="product-unit">${unit || '-'}</td>
            <td><button class='delete-row'>
                <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-trash-2">
                    <polyline points="3 6 5 6 21 6"></polyline>
                    <path d="M19 6v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6m3 0V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v2"></path>
                    <line x1="10" y1="11" x2="10" y2="17"></line>
                    <line x1="14" y1="11" x2="14" y2="17"></line>
                </svg>
                </button></td>
            </tr>`;

      $("#add-more-product-table tbody").append(tableRow);
      $("#add-product-name, #add-product-code, #add-product-category, #add-product-price, #add-product-unit, #add-product-description, #add-product-specifications").val('');
    });

    // Delete row
    $(document).on("click", ".delete-row", function() {
      let tableId = $(this).closest("table").attr("id");
      $(this).closest("tr").remove();
      if ($(`#${tableId} tbody tr`).length > 0) {
        serializeTable(tableId);
      }
    });

    // CREATE PRODUCTS
    $(document).on("click", ".create-product", function() {
      let products = [];
      if ($(document).find(".add-product-row").length > 0) {
        $(document).find(".add-product-row").each((index, element) => {
          let obj = {
            name: $(element).find('.product-name').text().trim(),
            productCode: $(element).find('.product-code').text().trim(),
            category: $(element).find('.product-category').text().trim() === '-' ? '' : $(element).find('.product-category').text().trim(),
            price: $(element).find('.product-price').text().trim() === '-' ? null : $(element).find('.product-price').text().trim(),
            unit: $(element).find('.product-unit').text().trim() === '-' ? '' : $(element).find('.product-unit').text().trim()
          }
          products.push(obj);
        });
      }

      if (products.length === 0) {
        createAlert({
          title: 'ERROR',
          msg: 'Please add at least one product',
          type: 'negative'
        });
        return;
      }

      $.ajax({
        method: "POST",
        url: "/admin/product/insert",
        headers: {
          'Content-Type': 'application/json'
        },
        data: JSON.stringify({
          productList: products
        }),
        success: function(response) {
          if (response.status === 200) {
            createAlert({
              title: "SUCCESS",
              msg: response.data.message,
              type: "positive",
            });
            setTimeout(() => {
              location.reload(true);
            }, 2000);
          } else {
            createAlert({
              title: "ERROR",
              msg: response.data.message,
              type: "negative",
            });
          }
          $("#add-product-modal").modal("hide");
        },
        error: function(error) {
          createAlert({
            title: "ERROR",
            msg: "Something went wrong!",
            type: "negative",
          });
          $("#add-product-modal").modal("hide");
        },
      });
    });

    // EDIT PRODUCT
    $(document).on("click", ".btn-edit", function() {
      let productId = $(this).attr("data-id");
      
      // Get all product data from the table row
      let productName = $(this).closest("tr").find(".product-name").text().trim();
      let productCode = $(this).closest("tr").find(".product-code").text().trim();
      let productCategory = $(this).closest("tr").find(".product-category").text().trim();
      let productPrice = $(this).closest("tr").find(".product-price").text().trim();
      let productUnit = $(this).closest("tr").find(".product-unit").text().trim();
      
      // We need to fetch the full product details to get description and specifications
      $.ajax({
        method: "GET",
        url: `/admin/product/${productId}`,
        success: function(response) {
          if (response.status === 200) {
            let product = response.data;
            
            // Populate all fields in the edit modal
            $("#edit-product-name").val(product.name || productName);
            $("#edit-product-code").val(product.product_code || productCode);
            $("#edit-product-category").val(product.category || (productCategory === '-' ? '' : productCategory));
            $("#edit-product-price").val(product.price || (productPrice === '-' ? '' : productPrice));
            $("#edit-product-unit").val(product.unit || (productUnit === '-' ? '' : productUnit));
            $("#edit-product-description").val(product.description || '');
            $("#edit-product-specifications").val(product.specifications || '');
            
            $(".save-product").attr("data-id", productId);
            $("#edit-product-modal").modal("show");
          } else {
            // Fallback to table data if API fails
            $("#edit-product-name").val(productName);
            $("#edit-product-code").val(productCode);
            $("#edit-product-category").val(productCategory === '-' ? '' : productCategory);
            $("#edit-product-price").val(productPrice === '-' ? '' : productPrice);
            $("#edit-product-unit").val(productUnit === '-' ? '' : productUnit);
            $("#edit-product-description").val('');
            $("#edit-product-specifications").val('');
            
            $(".save-product").attr("data-id", productId);
            $("#edit-product-modal").modal("show");
          }
        },
        error: function(error) {
          // Fallback to table data if API fails
          $("#edit-product-name").val(productName);
          $("#edit-product-code").val(productCode);
          $("#edit-product-category").val(productCategory === '-' ? '' : productCategory);
          $("#edit-product-price").val(productPrice === '-' ? '' : productPrice);
          $("#edit-product-unit").val(productUnit === '-' ? '' : productUnit);
          $("#edit-product-description").val('');
          $("#edit-product-specifications").val('');
          
          $(".save-product").attr("data-id", productId);
          $("#edit-product-modal").modal("show");
        }
      });
    });

    $(document).on("click", ".save-product", function() {
      let productName = $("#edit-product-name").val().trim();
      let productCode = $("#edit-product-code").val().trim();
      let category = $("#edit-product-category").val().trim();
      let price = $("#edit-product-price").val();
      let unit = $("#edit-product-unit").val().trim();
      let description = $("#edit-product-description").val().trim();
      let specifications = $("#edit-product-specifications").val().trim();
      let productId = $(this).attr("data-id");

      $.ajax({
        method: "POST",
        url: "/admin/product/update",
        headers: {
          'Content-Type': 'application/json'
        },
        data: JSON.stringify({
          productData: {
            productLid: productId,
            name: productName,
            productCode: productCode,
            category: category,
            price: price,
            unit: unit,
            description: description,
            specifications: specifications
          }
        }),
        success: function(response) {
          $("#edit-product-modal").modal("hide");
          if (response.status === 200) {
            createAlert({
              title: 'Success',
              msg: response.data.message,
              type: "positive",
            });

            let row = $('#table-content').find(`tr[data-id="${productId}"]`);
            row.find('.product-name').text(productName);
            row.find('.product-code').text(productCode);
            row.find('.product-category').text(category || '-');
            row.find('.product-price').text(price || '-');
            row.find('.product-unit').text(unit || '-');
          } else {
            createAlert({
              title: 'Error',
              msg: response.data.message,
              type: "negative",
            });
          }
        },
        error: function(error) {
          createAlert({
            title: 'Error',
            msg: 'Something went wrong!',
            type: "negative",
          });
        },
      });
    });

    // DELETE PRODUCT
    $(document).on('click', '.btn-delete', function() {
      let productId = $(this).attr("data-id");
      let thisBtn = $(this);
      const isConfirmed = confirm('Are you sure you want to remove this product?');

      if (!isConfirmed) {
        return false;
      }

      $.ajax({
        method: "POST",
        url: "/admin/product/delete",
        headers: {
          'Content-Type': 'application/json'
        },
        data: JSON.stringify({
          productLid: productId
        }),
        success: function(response) {
          if (response.status === 200) {
            createAlert({
              title: 'Success',
              msg: 'Product deleted successfully!',
              type: "positive",
            });

            thisBtn.closest("tr").remove();
            $('.bs-tooltip-top').remove();
          } else {
            createAlert({
              title: 'ERROR',
              msg: response.data.message,
              type: "negative",
            });
          }
        },
        error: function(error) {
          createAlert({
            title: 'ERROR',
            msg: 'Something went wrong!',
            type: "negative",
          });
        },
      });
    })
  });
</script>
<!--END CUSTOM JS SCRIPT -->

<%- include ('../partials/footer-end') %> 